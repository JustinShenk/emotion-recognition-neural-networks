digraph output {
	Legend [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="3">
<TR><TD  BGCOLOR = "#E0E0E0" COLSPAN="3">Layer</TD></TR>
<TR><TD BGCOLOR = "#88FFFF"> Complexity <br/> (MFLOPs) </TD>
<TD BGCOLOR = "#FF88FF"> Bandwidth <br/> (MB/s) </TD>
<TD BGCOLOR = "#FFFF88"> Time <br/> (ms)</TD></TR>
</TABLE>>
 shape=plaintext]
	Input [label="input: (1, 2304)"]
	"conv1/Relu" [label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="3">
<TR>
    <TD  BGCOLOR = "#A3A3A3" COLSPAN="3">conv1/Relu</TD>
</TR>
<TR>
    <TD  BGCOLOR = "#DDDDDD" COLSPAN="3">(32, 48, 48)</TD>
</TR>
<TR>
    <TD BGCOLOR = "#FFFFFF"> 3.6864 <br/> (MFLOPs) </TD>
    <TD BGCOLOR = "#FFFFFF"> 84.25 <br/> (MB/s) </TD>
    <TD BGCOLOR = "#FFFFB0"> 1.34 <br/> (ms)</TD>
</TR>
</TABLE>>
 shape=plaintext]
	Input -> "conv1/Relu"
	"pool1/MaxPool" [label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="3">
<TR>
    <TD  BGCOLOR = "#A3A3A3" COLSPAN="3">pool1/MaxPool</TD>
</TR>
<TR>
    <TD  BGCOLOR = "#DDDDDD" COLSPAN="3">(32, 24, 24)</TD>
</TR>
<TR>
    <TD BGCOLOR = "#FFFFFF"> 0.073728 <br/> (MFLOPs) </TD>
    <TD BGCOLOR = "#FFFFFF"> 414.93 <br/> (MB/s) </TD>
    <TD BGCOLOR = "#FFFFC5"> 0.34 <br/> (ms)</TD>
</TR>
</TABLE>>
 shape=plaintext]
	"conv1/Relu" -> "pool1/MaxPool"
	"conv2/Relu" [label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="3">
<TR>
    <TD  BGCOLOR = "#A3A3A3" COLSPAN="3">conv2/Relu</TD>
</TR>
<TR>
    <TD  BGCOLOR = "#DDDDDD" COLSPAN="3">(64, 24, 24)</TD>
</TR>
<TR>
    <TD BGCOLOR = "#FFFFFF"> 58.9824 <br/> (MFLOPs) </TD>
    <TD BGCOLOR = "#FFFFFF"> 102.82 <br/> (MB/s) </TD>
    <TD BGCOLOR = "#FFFF0"> 9.53 <br/> (ms)</TD>
</TR>
</TABLE>>
 shape=plaintext]
	"pool1/MaxPool" -> "conv2/Relu"
	"pool2/MaxPool" [label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="3">
<TR>
    <TD  BGCOLOR = "#A3A3A3" COLSPAN="3">pool2/MaxPool</TD>
</TR>
<TR>
    <TD  BGCOLOR = "#DDDDDD" COLSPAN="3">(64, 12, 12)</TD>
</TR>
<TR>
    <TD BGCOLOR = "#FFFFFF"> 0.036864 <br/> (MFLOPs) </TD>
    <TD BGCOLOR = "#FFFFFF"> 404.51 <br/> (MB/s) </TD>
    <TD BGCOLOR = "#FFFFC9"> 0.17 <br/> (ms)</TD>
</TR>
</TABLE>>
 shape=plaintext]
	"conv2/Relu" -> "pool2/MaxPool"
	"fc1/Relu" [label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="3">
<TR>
    <TD  BGCOLOR = "#A3A3A3" COLSPAN="3">fc1/Relu</TD>
</TR>
<TR>
    <TD  BGCOLOR = "#DDDDDD" COLSPAN="3">(1024, 1, 1)</TD>
</TR>
<TR>
    <TD BGCOLOR = "#FFFFFF"> 18.874368 <br/> (MFLOPs) </TD>
    <TD BGCOLOR = "#FFFFFF"> 2174.77 <br/> (MB/s) </TD>
    <TD BGCOLOR = "#FFFF1A"> 8.29 <br/> (ms)</TD>
</TR>
</TABLE>>
 shape=plaintext]
	"pool2/MaxPool" -> "fc1/Relu"
	"fc2/add" [label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="3">
<TR>
    <TD  BGCOLOR = "#A3A3A3" COLSPAN="3">fc2/add</TD>
</TR>
<TR>
    <TD  BGCOLOR = "#DDDDDD" COLSPAN="3">(7, 1, 1)</TD>
</TR>
<TR>
    <TD BGCOLOR = "#FFFFFF"> 0.014336 <br/> (MFLOPs) </TD>
    <TD BGCOLOR = "#FFFFFF"> 396.26 <br/> (MB/s) </TD>
    <TD BGCOLOR = "#FFFFCB"> 0.04 <br/> (ms)</TD>
</TR>
</TABLE>>
 shape=plaintext]
	"fc1/Relu" -> "fc2/add"
	output [label=<
<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="3">
<TR>
    <TD  BGCOLOR = "#A3A3A3" COLSPAN="3">output</TD>
</TR>
<TR>
    <TD  BGCOLOR = "#DDDDDD" COLSPAN="3">(7, 1, 1)</TD>
</TR>
<TR>
    <TD BGCOLOR = "#FFFFFF"> 2.1e-05 <br/> (MFLOPs) </TD>
    <TD BGCOLOR = "#FFFFFF"> 0.65 <br/> (MB/s) </TD>
    <TD BGCOLOR = "#FFFFCB"> 0.04 <br/> (ms)</TD>
</TR>
</TABLE>>
 shape=plaintext]
	"fc2/add" -> output
	Output [label="output: [1, 1, 7]"]
	output -> Output
	Summary [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="3">
<TR><TD  BGCOLOR = "#C60000" COLSPAN="3">Summary</TD></TR>
<TR><TD  BGCOLOR = "#E2E2E2" COLSPAN="3">1 SHV Processors</TD></TR>
<TR><TD  BGCOLOR = "#DADADA" COLSPAN="3">Inference time 19.75 ms</TD></TR>
<TR><TD  BGCOLOR = "#E2E2E2" COLSPAN="3">Bandwidth 979.31 MB/sec</TD></TR>
<TR><TD  BGCOLOR = "#DADADA" COLSPAN="3">This network is Compute bound</TD></TR>
</TABLE>>
 shape=plaintext]
}
